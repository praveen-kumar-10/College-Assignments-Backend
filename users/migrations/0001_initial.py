# Generated by Django 4.1 on 2023-03-05 13:08

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.TextField(default=None, null=True, unique=True)),
                ('user_type', models.TextField(default=None, null=True)),
                ('verified', models.BooleanField(default=False, null=True)),
                ('is_active', models.BooleanField(default=False, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(default=None, null=True)),
                ('due_date', models.DateTimeField(default=None)),
                ('date', models.DateTimeField(default=None)),
                ('assignment_link', models.TextField(default=None, null=True)),
                ('subject', models.TextField(default=None, null=True)),
                ('subject_code', models.TextField(default=None, null=True)),
                ('semester', models.IntegerField(default=None)),
            ],
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.TextField(default=None, null=True)),
                ('edu_year', models.TextField(default=None, null=True)),
                ('branch', models.TextField(default=None, null=True)),
                ('section', models.TextField(default=None, null=True)),
                ('semester', models.TextField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Colors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.TextField(default=None, null=True)),
                ('color', models.TextField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(default=None)),
                ('gender', models.TextField(default=None, null=True)),
                ('phone', models.CharField(max_length=10, unique=True)),
                ('department', models.TextField(default=None)),
                ('user', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roll_no', models.CharField(max_length=10, unique=True)),
                ('gender', models.TextField(default=None, null=True)),
                ('phone', models.CharField(default=None, max_length=10, null=True, unique=True)),
                ('name', models.TextField(default=None)),
                ('class_obj', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.class')),
                ('user', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp', models.TextField(default=None)),
                ('generatedAt', models.DateTimeField(default=datetime.datetime.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Lectures',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.TextField(default=None, null=True)),
                ('subject_code', models.TextField(default=None, null=True)),
                ('class_obj', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.class')),
                ('teacher', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='AssignmentAssigned',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_link', models.TextField(default=None, null=True)),
                ('date_submitted', models.DateTimeField(default=None, null=True)),
                ('is_submitted', models.BooleanField(default=False, null=True)),
                ('marks', models.IntegerField(default=None, null=True)),
                ('feedback', models.TextField(default=None, null=True)),
                ('semester', models.IntegerField(default=None)),
                ('assignment', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.assignment')),
                ('class_obj', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='users.class')),
                ('student', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.student')),
            ],
        ),
        migrations.AddField(
            model_name='assignment',
            name='assigned_by',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.teacher'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='class_obj',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='users.class'),
        ),
    ]
